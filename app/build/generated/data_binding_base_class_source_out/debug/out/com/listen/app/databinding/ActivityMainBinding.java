// Generated by view binder compiler. Do not edit!
package com.listen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.listen.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnPlayback;

  @NonNull
  public final Button btnSettings;

  @NonNull
  public final Button btnStartStop;

  @NonNull
  public final CardView cardStatus;

  @NonNull
  public final CardView cardStorage;

  @NonNull
  public final LinearLayout llControls;

  @NonNull
  public final TextView tvAvailableStorage;

  @NonNull
  public final TextView tvRecordingStatus;

  @NonNull
  public final TextView tvServiceStatus;

  @NonNull
  public final TextView tvStorageUsage;

  @NonNull
  public final TextView tvTitle;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnPlayback,
      @NonNull Button btnSettings, @NonNull Button btnStartStop, @NonNull CardView cardStatus,
      @NonNull CardView cardStorage, @NonNull LinearLayout llControls,
      @NonNull TextView tvAvailableStorage, @NonNull TextView tvRecordingStatus,
      @NonNull TextView tvServiceStatus, @NonNull TextView tvStorageUsage,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnPlayback = btnPlayback;
    this.btnSettings = btnSettings;
    this.btnStartStop = btnStartStop;
    this.cardStatus = cardStatus;
    this.cardStorage = cardStorage;
    this.llControls = llControls;
    this.tvAvailableStorage = tvAvailableStorage;
    this.tvRecordingStatus = tvRecordingStatus;
    this.tvServiceStatus = tvServiceStatus;
    this.tvStorageUsage = tvStorageUsage;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_playback;
      Button btnPlayback = ViewBindings.findChildViewById(rootView, id);
      if (btnPlayback == null) {
        break missingId;
      }

      id = R.id.btn_settings;
      Button btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }

      id = R.id.btn_start_stop;
      Button btnStartStop = ViewBindings.findChildViewById(rootView, id);
      if (btnStartStop == null) {
        break missingId;
      }

      id = R.id.card_status;
      CardView cardStatus = ViewBindings.findChildViewById(rootView, id);
      if (cardStatus == null) {
        break missingId;
      }

      id = R.id.card_storage;
      CardView cardStorage = ViewBindings.findChildViewById(rootView, id);
      if (cardStorage == null) {
        break missingId;
      }

      id = R.id.ll_controls;
      LinearLayout llControls = ViewBindings.findChildViewById(rootView, id);
      if (llControls == null) {
        break missingId;
      }

      id = R.id.tv_available_storage;
      TextView tvAvailableStorage = ViewBindings.findChildViewById(rootView, id);
      if (tvAvailableStorage == null) {
        break missingId;
      }

      id = R.id.tv_recording_status;
      TextView tvRecordingStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvRecordingStatus == null) {
        break missingId;
      }

      id = R.id.tv_service_status;
      TextView tvServiceStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvServiceStatus == null) {
        break missingId;
      }

      id = R.id.tv_storage_usage;
      TextView tvStorageUsage = ViewBindings.findChildViewById(rootView, id);
      if (tvStorageUsage == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnPlayback, btnSettings,
          btnStartStop, cardStatus, cardStorage, llControls, tvAvailableStorage, tvRecordingStatus,
          tvServiceStatus, tvStorageUsage, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
